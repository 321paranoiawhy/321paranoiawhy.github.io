{"title":"data-xx属性与attr函数","uid":"0b9fa4a7444901f991f91b085bd1a421","slug":"data-xx属性与attr函数","date":"2022-08-26T06:32:26.000Z","updated":"2022-08-26T14:28:41.622Z","comments":true,"path":"api/articles/data-xx属性与attr函数.json","keywords":null,"cover":[],"content":"<hr>\n<h1 id=\"HTML-元素的-data-xxx-属性\"><a href=\"#HTML-元素的-data-xxx-属性\" class=\"headerlink\" title=\"HTML 元素的 data-xxx 属性\"></a><code>HTML</code> 元素的 <code>data-xxx</code> 属性</h1><pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;!-- HTML --&gt;\n&lt;p data-text&#x3D;&#39;123456&#39;&gt;Paragraph&lt;&#x2F;p&gt;</code></pre>\n\n<hr>\n<h1 id=\"获取-HTML-元素的-data-xxx-属性\"><a href=\"#获取-HTML-元素的-data-xxx-属性\" class=\"headerlink\" title=\"获取 HTML 元素的 data-xxx 属性\"></a>获取 <code>HTML</code> 元素的 <code>data-xxx</code> 属性</h1><p>在 <code>CSS</code> 中可通过 <code>attr()</code> 函数获取当前元素的 <code>data-xxx</code> 属性值作为其自身的 <code>content</code> 属性值:</p>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\np::after &#123;\n  content: attr(data-text);\n  margin-left: 1rem;\n  color: blue;\n&#125;</code></pre>\n\n<p>注意, <code>attr()</code> 仅适用于伪元素上, 如 <code>::before</code> 和 <code>::after</code> 的 <code>content</code> 属性值上, 语法为: <code>content: attr(data-xxx)</code>。</p>\n<p><code>attr(data-xxx)</code> 如果在伪元素对应的元素上无 <code>data-xxx</code> 属性, 则赋值会静默失败, 而不会如 <code>CSS</code> 变量那般继续向上查找。因此在使用时尽量确保原元素上有该属性, 或者提供回退值:</p>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\np::after &#123;\n  content: attr(data-text) &#39;fallback&#39;;\n&#125;</code></pre>\n\n<p>当 <code>p</code> 元素无 <code>data-text</code> 属性值时, <code>::after</code> 伪元素内容将为 <code>fallback</code>。</p>\n<p>在 <code>JavaScript</code> 中可通过以下三种方式获取 <code>HTML</code> 元素上的 <code>data-xxx</code> 属性值:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&#x2F;&#x2F; JavaScript\nconst p &#x3D; document.querySelector(&#39;p&#39;);\np.getAttribute(&#39;data-text&#39;); &#x2F;&#x2F; 123456\np.dataset.text; &#x2F;&#x2F; 123456\ngetComputedStyle(p,&#39;::after&#39;).getPropertyValue(&#39;content&#39;); &#x2F;&#x2F; 123456</code></pre>\n\n<p><code>jQuery</code> 中则可如下操作:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&#x2F;&#x2F; JavaScript\nconst p &#x3D; $(&#39;p&#39;);\n\n&#x2F;&#x2F; $.attr()\n&#x2F;&#x2F; 取值\np.attr(&#39;data-text&#39;);\n&#x2F;&#x2F; 赋值\np.attr(&#39;data-text&#39;, &#39;new value&#39;);\n&#x2F;&#x2F; 删除属性\np.removeAttr(&#39;data-text&#39;);\n\n&#x2F;&#x2F; 或者使用 $.data()\n&#x2F;&#x2F; 取值\np.data(&#39;data-text&#39;);\n&#x2F;&#x2F; 赋值\np.data(&#39;data-text&#39;, &#39;new value&#39;);\n&#x2F;&#x2F; 删除属性\np.removeData(&#39;data-text&#39;);</code></pre>\n\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://www.w3.org/TR/css3-values/#attr-notation\">Attribute References: attr() - W3C</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/attr\">attr() - MDN</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle\">Window.getComputedStyle() - MDN</a></li>\n</ul>\n<hr>\n<h1 id=\"伪元素-content-内换行\"><a href=\"#伪元素-content-内换行\" class=\"headerlink\" title=\"伪元素 content 内换行\"></a>伪元素 <code>content</code> 内换行</h1><pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\np::before &#123;\n  content: &#39;123 \\A 456&#39;;\n  white-space: pre;\n&#125;</code></pre>\n\n<p>上述 <code>CSS</code> 代码中 <code>123</code> 和 <code>456</code> 将各占一行。</p>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;!-- HTML --&gt;\n&lt;p data-text&#x3D;&#39;123 \\A 456&#39;&gt;Paragraph&lt;&#x2F;p&gt;</code></pre>\n\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\np::after &#123;\n  content: attr(data-text);\n  white-space: pre;\n&#125;</code></pre>\n\n<p>上述代码中 <code>123</code> 和 <code>456</code> 将处于同一行而不会换行。这是因为 <code>CSS</code> 对 <code>\\</code> 的特殊处理:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">const p &#x3D; document.querySelector(&#39;p&#39;);\ngetComputedStyle(p,&#39;::after&#39;).getPropertyValue(&#39;content&#39;);\n&#x2F;&#x2F; &#39;&quot;123 \\\\\\\\A 456&quot;&#39;</code></pre>\n\n<p>单个 <code>\\</code> 变成了 四个 <code>\\\\\\\\</code>, 因而 <code>\\A</code> 的换行效果失效。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>The attribute value is treated as a CSS <string>. It is NOT reparsed, and in particular the characters are used as-is instead of CSS escapes being turned into different characters.</p></blockquote>\n<p><img src=\"/../images/pseudo-element-content-value.png\"></p>\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://harttle.land/2018/05/15/html-css-escape.html\">在 HTML 和 CSS 中转义特殊字符</a></li>\n</ul>\n<hr>\n<h1 id=\"伪元素-content-内插入-HTML-元素\"><a href=\"#伪元素-content-内插入-HTML-元素\" class=\"headerlink\" title=\"伪元素 content 内插入 HTML 元素\"></a>伪元素 <code>content</code> 内插入 <code>HTML</code> 元素</h1><p><a href=\"https://stackoverflow.com/questions/4505093/css-content-property-is-it-possible-to-insert-html-instead-of-text\">CSS content property: is it possible to insert HTML instead of Text? - Stackoverflow</a></p>\n<p>如果直接将 <code>content</code> 属性值设置为 <code>HTML</code> 元素, 则只显示其字符串字面量, 而非真正的 <code>HTML</code> 元素:</p>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\np::after &#123;\n    content: &#39;&lt;p&gt;paragraph&lt;&#x2F;p&gt;&#39;;\n&#125;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Generated content does not alter the document tree. In particular, it is not fed back to the document language processor (e.g., for reparsing).</p></blockquote>\n<p>一种可行但比较取巧的办法是在 <code>content</code> 中使用 <code>url()</code> 函数来插入 <code>svg</code> 等图片或者 <code>icon font</code>:</p>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;!-- HTML --&gt;\n&lt;p&gt;Hi&lt;&#x2F;p&gt;</code></pre>\n\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\np::after &#123;\n  content: url(&#39;data:image&#x2F;svg+xml;%20charset&#x3D;utf8,%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%2260%22%20width%3D%22200%22%3E%0A%0A%20%20%3CforeignObject%20y%3D%220%22%20x%3D%220%22%20height%3D%22100%25%22%20width%3D%22100%25%22%3E%0A%09%3Cdiv%20style%3D%22color%3A%20blue%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%3E%0A%09%09I%20am%20%3Cpre%3EHTML%3C%2Fpre%3E%0A%09%3C%2Fdiv%3E%0A%20%20%3C%2FforeignObject%3E%0A%3C%2Fsvg%3E&#39;);\n&#125;</code></pre>\n\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://drafts.csswg.org/css2/#characters\">Characters and case - W3C</a></li>\n<li><a href=\"https://www.w3.org/TR/css-values-4/#strings\">Quoted Strings: the <string> type - W3C</a></li>\n<li><a href=\"https://www.w3.org/TR/css-gcpm-3/#running-syntax\">CSS Generated Content for Paged Media Module - W3C</a></li>\n</ul>\n<hr>\n<h1 id=\"伪元素-content-内插入特殊字符\"><a href=\"#伪元素-content-内插入特殊字符\" class=\"headerlink\" title=\"伪元素 content 内插入特殊字符\"></a>伪元素 <code>content</code> 内插入特殊字符</h1><pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\np::after &#123;\n    &#x2F;* 以下四种方式均可 *&#x2F;\n    content: &quot;this is a &#39;string&#39;.&quot;;\n    &#x2F;* content: &quot;this is a \\&quot;string\\&quot;.&quot;;\n    content: &#39;this is a &quot;string&quot;.&#39;;\n    content: &#39;this is a \\&#39;string\\&#39;.&#39;; *&#x2F;\n&#125;</code></pre>\n\n<hr>\n<h1 id=\"利用伪元素在-HTML-元素上添加内容\"><a href=\"#利用伪元素在-HTML-元素上添加内容\" class=\"headerlink\" title=\"利用伪元素在 HTML 元素上添加内容\"></a>利用伪元素在 <code>HTML</code> 元素上添加内容</h1><pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;!-- HTML --&gt;\n&lt;h1&gt;HTML Tutorial&lt;&#x2F;h1&gt;\n&lt;h1&gt;CSS Tutorial&lt;&#x2F;h1&gt;\n&lt;h1&gt;JavaScript Tutorial&lt;&#x2F;h1&gt;</code></pre>\n\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\nbody &#123;\n  counter-reset: chapter;\n&#125;\nh1::before &#123;\n  counter-increment: chapter;\n  content: &quot;\\00a7&quot; &quot;Chapter &quot; counter(chapter) &quot;: &quot;;\n&#125;\nh1::after &#123;\n  content: &#39;.&#39;;\n&#125;</code></pre>\n\n<p>每个 <code>h1</code> 元素前面会有 <code>Chapter X: </code>, 后面会有 <code>.</code>, 上述代码最终展示结果为:</p>\n<p><img src=\"/../images/Chapter.png\"></p>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;!-- HTML --&gt;\n&lt;h1&gt;HTML&#x2F;CSS Tutorials&lt;&#x2F;h1&gt;\n&lt;h2&gt;HTML&lt;&#x2F;h2&gt;\n&lt;h2&gt;CSS&lt;&#x2F;h2&gt;\n&lt;h2&gt;Bootstrap&lt;&#x2F;h2&gt;\n&lt;h2&gt;W3.CSS&lt;&#x2F;h2&gt;\n\n&lt;h1&gt;Scripting Tutorials&lt;&#x2F;h1&gt;\n&lt;h2&gt;JavaScript&lt;&#x2F;h2&gt;\n&lt;h2&gt;jQuery&lt;&#x2F;h2&gt;\n&lt;h2&gt;React&lt;&#x2F;h2&gt;\n\n&lt;h1&gt;Programming Tutorials&lt;&#x2F;h1&gt;\n&lt;h2&gt;Python&lt;&#x2F;h2&gt;\n&lt;h2&gt;Java&lt;&#x2F;h2&gt;\n&lt;h2&gt;C++&lt;&#x2F;h2&gt;</code></pre>\n\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">&#x2F;* CSS *&#x2F;\nbody &#123;\n  counter-reset: section;\n&#125;\n\nh1 &#123;\n  counter-reset: subsection;\n&#125;\n\nh1::before &#123;\n  counter-increment: section;\n  content: &quot;Section &quot; counter(section) &quot;. &quot;;\n&#125;\n\nh2::before &#123;\n  counter-increment: subsection;\n  content: counter(section) &quot;.&quot; counter(subsection) &quot; &quot;;\n&#125;</code></pre>\n\n<p>上述代码最终展示结果为:</p>\n<p><img src=\"/../images/Nesting-Counters.png\"></p>\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_counters1\">Automatic Numbering With Counters - W3CScools</a></li>\n<li><a href=\"https://www.w3schools.com/css/tryit.asp?filename=trycss_counters2\">Nesting Counters - W3CScools</a></li>\n</ul>\n<hr>\n","feature":true,"text":" HTML 元素的 data-xxx 属性&lt;!-- HTML --&gt; &lt;p data-text&#x3D;&#39;123456&#39;&gt;Paragraph&lt;&#x2F;p&gt; 获取 HTML 元素的 data-xxx 属性在 CSS 中可通过...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":7,"path":"api/tags/CSS.json"},{"name":"HTML","slug":"HTML","count":1,"path":"api/tags/HTML.json"},{"name":"data-xx","slug":"data-xx","count":1,"path":"api/tags/data-xx.json"},{"name":"attr()","slug":"attr","count":1,"path":"api/tags/attr.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HTML-%E5%85%83%E7%B4%A0%E7%9A%84-data-xxx-%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">HTML 元素的 data-xxx 属性</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96-HTML-%E5%85%83%E7%B4%A0%E7%9A%84-data-xxx-%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">获取 HTML 元素的 data-xxx 属性</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BC%AA%E5%85%83%E7%B4%A0-content-%E5%86%85%E6%8D%A2%E8%A1%8C\"><span class=\"toc-text\">伪元素 content 内换行</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BC%AA%E5%85%83%E7%B4%A0-content-%E5%86%85%E6%8F%92%E5%85%A5-HTML-%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">伪元素 content 内插入 HTML 元素</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BC%AA%E5%85%83%E7%B4%A0-content-%E5%86%85%E6%8F%92%E5%85%A5%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">伪元素 content 内插入特殊字符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E4%BC%AA%E5%85%83%E7%B4%A0%E5%9C%A8-HTML-%E5%85%83%E7%B4%A0%E4%B8%8A%E6%B7%BB%E5%8A%A0%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">利用伪元素在 HTML 元素上添加内容</span></a></li></ol>","author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"CDN-jsdelivr","uid":"44cee75f8075985432dfe6e0d7afcb12","slug":"CDN-jsdelivr","date":"2022-08-24T11:15:29.000Z","updated":"2022-08-24T11:15:29.650Z","comments":true,"path":"api/articles/CDN-jsdelivr.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}