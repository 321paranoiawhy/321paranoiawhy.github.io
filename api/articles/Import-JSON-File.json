{"title":"Import-JSON-File","uid":"714f34ed9fabefc2c1be746108edd799","slug":"Import-JSON-File","date":"2022-08-21T06:56:41.000Z","updated":"2022-08-21T08:25:17.782Z","comments":true,"path":"api/articles/Import-JSON-File.json","keywords":null,"cover":null,"content":"<hr>\n<h1 id=\"import-assertions\"><a href=\"#import-assertions\" class=\"headerlink\" title=\"import assertions\"></a><code>import assertions</code></h1><h2 id=\"static-import\"><a href=\"#static-import\" class=\"headerlink\" title=\"static import\"></a>static import</h2><p><a href=\"https://v8.dev/features/import-assertions\">See Here</a></p>\n<p>从本地引入 <code>test.json</code>:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">import test from &#39;.&#x2F;test.json&#39; assert &#123;type: &#39;json&#39;&#125;;\n\nconsole.log(test);</code></pre>\n\n<p>从网络上引入, 这里以 <code>JSONPlaceholder</code> 网站 为例:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">import _albums from &#39;http:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;albums&#39; assert &#123;type: &#39;json&#39;&#125;;\n\nconsole.log(_albums);</code></pre>\n\n<hr>\n<h2 id=\"dynamic-import\"><a href=\"#dynamic-import\" class=\"headerlink\" title=\"dynamic import\"></a>dynamic import</h2><p><a href=\"https://v8.dev/features/import-assertions#dynamic-import()\">See Here</a></p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">const test &#x3D; await import(&#39;.&#x2F;test.json&#39;, &#123;\n    assert: &#123; type: &#39;json&#39; &#125;\n&#125;);\n\nconsole.log(test.default);</code></pre>\n\n<p>注意, <code>chrome</code> 和 <code>edge</code> 浏览器均已支持这一特性, 而 <code>firefox</code> 则暂未支持。<code>firefox</code> 控制台会报错: <code>Uncaught SyntaxError: import assertions are not currently supported</code>。<code>import assertions</code> 兼容性参见:</p>\n<ul>\n<li><a href=\"https://github.com/mozilla/standards-positions/issues/373#issuecomment-1171321908\">Issue: import attributes - mozilla</a></li>\n<li><a href=\"https://chromestatus.com/feature/5765269513306112\">Feature: Import Assertions - Chrome Platform Status</a></li>\n</ul>\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://github.com/tc39/proposal-import-assertions\">proposal import assertions - TC39</a></li>\n<li><a href=\"https://github.com/tc39/proposal-json-modules\">proposal json modules - TC39</a></li>\n<li><a href=\"https://2ality.com/2021/01/import-assertions.html\">ECMAScript proposal: Import assertions - Dr. Axel Rauschmayer</a></li>\n<li><a href=\"https://tc39.es/proposal-import-assertions/\">import assertions - tc39</a></li>\n</ul>\n<hr>\n<h1 id=\"XMLHttpRequest\"><a href=\"#XMLHttpRequest\" class=\"headerlink\" title=\"XMLHttpRequest\"></a><code>XMLHttpRequest</code></h1><p><a href=\"https://zh.javascript.info/xmlhttprequest#xiang-ying-lei-xing\">响应类型</a></p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">let xhr &#x3D; new XMLHttpRequest();\nxhr.open(&#39;GET&#39;, &#39;.&#x2F;test.json&#39;);\nxhr.responseType &#x3D; &#39;json&#39;;\nxhr.send();\nxhr.onload &#x3D; function () &#123;\n    console.log(xhr.response);\n&#125;;</code></pre>\n\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">Using XMLHttpRequest -MDN</a></li>\n<li><a href=\"https://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html\">XMLHttpRequest Level 2 使用指南 - 阮一峰</a></li>\n</ul>\n<hr>\n<h1 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a><code>axios</code></h1><p><a href=\"https://axios-http.com/docs/example\">Minimal Example - AXIOS</a></p>\n<h2 id=\"axios-同步方式\"><a href=\"#axios-同步方式\" class=\"headerlink\" title=\"axios 同步方式\"></a><code>axios</code> 同步方式</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">const axios &#x3D; require(&#39;axios&#39;);\naxios.get(&#39;.&#x2F;test.json&#39;).then((response)&#x3D;&gt;console.log(response));</code></pre>\n\n<hr>\n<h2 id=\"axios-异步方式\"><a href=\"#axios-异步方式\" class=\"headerlink\" title=\"axios 异步方式\"></a><code>axios</code> 异步方式</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">const axios &#x3D; require(&#39;axios&#39;);\n\nasync getJSON &#x3D; () &#x3D;&gt; &#123;\n    const response &#x3D; await axios.get(&#39;.&#x2F;test.json&#39;);\n    return response;\n&#125;\n\nconsole.log(getJSON());</code></pre>\n\n<p>注意, 以上两种方式中可加入 <code>try catch</code> 错误处理机制。</p>\n<hr>\n<h1 id=\"fetch\"><a href=\"#fetch\" class=\"headerlink\" title=\"fetch\"></a><code>fetch</code></h1><p><a href=\"https://zh.javascript.info/fetch\">Fetch</a></p>\n<h2 id=\"fetch-同步方式\"><a href=\"#fetch-同步方式\" class=\"headerlink\" title=\"fetch 同步方式\"></a><code>fetch</code> 同步方式</h2><p>两个 <code>await</code>:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">const response &#x3D; await fetch(&#39;.&#x2F;test.json&#39;);\n\nconst result &#x3D; await response.json();\n\nconsole.log(result);</code></pre>\n\n<p><code>promise</code> 形式, <code>then</code> 链式调用:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">fetch(&#39;.&#x2F;test.json&#39;)\n    .then(response &#x3D;&gt; response.json())\n    .then(json &#x3D;&gt; console.log(json));</code></pre>\n\n<hr>\n<h2 id=\"fetch-异步方式\"><a href=\"#fetch-异步方式\" class=\"headerlink\" title=\"fetch 异步方式\"></a><code>fetch</code> 异步方式</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">async function getJSON() &#123;\n  try &#123;\n    let response &#x3D; await fetch(&#39;.&#x2F;test.json&#39;);\n    return await response.json();\n  &#125; catch (error) &#123;\n    console.log(&#39;Request Failed&#39;, error);\n  &#125;\n&#125;</code></pre>\n\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\">Using the Fetch API - MDN</a></li>\n<li><a href=\"https://www.ruanyifeng.com/blog/2020/12/fetch-tutorial.html\">Fetch API 教程 - 阮一峰</a></li>\n</ul>\n<hr>\n<h1 id=\"Vue-2-中导入-json\"><a href=\"#Vue-2-中导入-json\" class=\"headerlink\" title=\"Vue 2 中导入 json\"></a><code>Vue 2</code> 中导入 <code>json</code></h1><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&lt;script&gt;\nimport test from &quot;.&#x2F;test.json&quot;;\n\nexport default &#123;\n    data() &#123;\n        return &#123;\n            test: test,\n        &#125;;\n    &#125;,\n&#125;\n&lt;script&gt;</code></pre>\n\n<p>按上述方式导入 <code>json</code> 文件后, 便可在 <code>template</code> 中使用  <code>test</code> 变量。</p>\n<hr>\n<h1 id=\"Vue-3-中导入-json\"><a href=\"#Vue-3-中导入-json\" class=\"headerlink\" title=\"Vue 3 中导入 json\"></a><code>Vue 3</code> 中导入 <code>json</code></h1><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&lt;script&gt;\nimport test from &quot;.&#x2F;test.json&quot;;\n\nexport default &#123;\n    setup() &#123;\n        return &#123;\n            test,\n        &#125;\n    &#125;\n&#125;\n&lt;script&gt;</code></pre>\n\n<p>按上述方式导入 <code>json</code> 文件后, 便可在 <code>template</code> 中使用  <code>test</code> 变量。</p>\n<hr>\n<h1 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a><code>Node.js</code></h1><ul>\n<li><a href=\"https://nodejs.dev/en/learn/reading-files-with-nodejs\">Reading files with Node.js</a></li>\n<li><a href=\"https://stackabuse.com/reading-and-writing-json-files-with-node-js/\">Reading and Writing JSON Files with Node.js - Scott Robinson</a></li>\n<li><a href=\"https://stackoverflow.com/questions/10011011/using-node-js-how-do-i-read-a-json-file-into-server-memory\">Using Node.js how do I read a JSON file into server memory - StackOverflow</a></li>\n</ul>\n<h2 id=\"fs-readFileSync-同步方式\"><a href=\"#fs-readFileSync-同步方式\" class=\"headerlink\" title=\"fs.readFileSync 同步方式\"></a><code>fs.readFileSync</code> 同步方式</h2><p><a href=\"https://nodejs.org/api/fs.html#fsreadfilesyncpath-options\">fs.readFileSync - Node.js</a></p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">const fs &#x3D; require(&#39;fs&#39;);\n\nlet rawData &#x3D; fs.readFileSync(&#39;test.json&#39;);\nconsole.log(rawData);\n\nlet test &#x3D; JSON.parse(rawData);\nconsole.log(test);</code></pre>\n\n<hr>\n<h2 id=\"fs-readFile-异步方式\"><a href=\"#fs-readFile-异步方式\" class=\"headerlink\" title=\"fs.readFile 异步方式\"></a><code>fs.readFile</code> 异步方式</h2><p><a href=\"https://nodejs.org/api/fs.html#fsreadfilepath-options-callback\">fs.readFile - Node.js</a></p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">const fs &#x3D; require(&#39;fs&#39;);\n\nfs.readFile(&#39;test.json&#39;, (err, rawData) &#x3D;&gt; &#123;\n    if (err) throw err;\n    let test &#x3D; JSON.parse(rawData);\n    console.log(test);\n&#125;);</code></pre>\n\n<hr>\n<h2 id=\"require\"><a href=\"#require\" class=\"headerlink\" title=\"require\"></a><code>require</code></h2><p><a href=\"https://nodejs.org/api/modules.html#requireid\">require -Node.js</a></p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">let test &#x3D; require(&#39;test.json&#39;);\n\nconsole.log(test);</code></pre>\n\n<h2 id=\"JSON-modules\"><a href=\"#JSON-modules\" class=\"headerlink\" title=\"JSON modules\"></a><code>JSON modules</code></h2><ul>\n<li><a href=\"https://nodejs.org/api/esm.html#import-assertions\">Import assertions - Node.js</a></li>\n<li><a href=\"https://nodejs.org/api/esm.html#json-modules\">JSON modules - Node.js</a></li>\n</ul>\n<p>同 <code>import assertions</code> 方式:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">import test from &#39;.&#x2F;test.json&#39; assert &#123; type: &#39;json&#39; &#125;;\n\nconsole.log(test);</code></pre>","text":" import assertionsstatic importSee Here 从本地引入 test.json: import test from &#39;.&#x2F;test.json&#39; assert &#123;type: &#39;json&#39;&#125;...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JSON","slug":"JSON","count":1,"path":"api/tags/JSON.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#import-assertions\"><span class=\"toc-text\">import assertions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#static-import\"><span class=\"toc-text\">static import</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#dynamic-import\"><span class=\"toc-text\">dynamic import</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#XMLHttpRequest\"><span class=\"toc-text\">XMLHttpRequest</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#axios\"><span class=\"toc-text\">axios</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#axios-%E5%90%8C%E6%AD%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">axios 同步方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#axios-%E5%BC%82%E6%AD%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">axios 异步方式</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#fetch\"><span class=\"toc-text\">fetch</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#fetch-%E5%90%8C%E6%AD%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">fetch 同步方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#fetch-%E5%BC%82%E6%AD%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">fetch 异步方式</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Vue-2-%E4%B8%AD%E5%AF%BC%E5%85%A5-json\"><span class=\"toc-text\">Vue 2 中导入 json</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Vue-3-%E4%B8%AD%E5%AF%BC%E5%85%A5-json\"><span class=\"toc-text\">Vue 3 中导入 json</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Node-js\"><span class=\"toc-text\">Node.js</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#fs-readFileSync-%E5%90%8C%E6%AD%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">fs.readFileSync 同步方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#fs-readFile-%E5%BC%82%E6%AD%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">fs.readFile 异步方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#require\"><span class=\"toc-text\">require</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JSON-modules\"><span class=\"toc-text\">JSON modules</span></a></li></ol></li></ol>","author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"漫谈UUID","uid":"a4d2eb95162f8f318cf51e158a9680f2","slug":"漫谈UUID","date":"2022-08-23T02:49:51.000Z","updated":"2022-08-23T03:24:28.143Z","comments":true,"path":"api/articles/漫谈UUID.json","keywords":null,"cover":null,"text":"什么是 UUID / GUIDUUID 全称 Universally Unique Identifier, 即通用唯一识别码, 其标准之一为 RFC4122。 Read Also: Universally Unique Identifier - Wikipedia the WIC...","link":"","photos":[],"count_time":{"symbolsCount":537,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"UUID","slug":"UUID","count":1,"path":"api/tags/UUID.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Web-Components-Part-2","uid":"19c59505211190a413a77f90e46a1c80","slug":"Web-Components-Part-2","date":"2022-08-21T04:32:39.000Z","updated":"2022-08-22T06:02:29.822Z","comments":true,"path":"api/articles/Web-Components-Part-2.json","keywords":null,"cover":null,"text":" shadow DOM 内设置内部元素样式Reference: How to create a style tag using JavaScript? - GeeksforGeeks Web Components中引入外部CSS的3种方法 - 张鑫旭 Shadow DOM sty...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"Web Components","slug":"Web-Components","count":2,"path":"api/tags/Web-Components.json"},{"name":"Part 2","slug":"Part-2","count":1,"path":"api/tags/Part-2.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}