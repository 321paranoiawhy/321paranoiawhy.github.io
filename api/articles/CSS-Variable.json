{"title":"CSS-Variable","uid":"8949a0dd9071511c8b500f8362ade395","slug":"CSS-Variable","date":"2022-08-18T08:51:55.000Z","updated":"2022-08-18T13:42:12.696Z","comments":true,"path":"api/articles/CSS-Variable.json","keywords":null,"cover":null,"content":"<h1 id=\"定义和使用-CSS-变量\"><a href=\"#定义和使用-CSS-变量\" class=\"headerlink\" title=\"定义和使用 CSS 变量\"></a>定义和使用 <code>CSS</code> 变量</h1><p><code>CSS</code> 变量可以全局定义, 即在 <code>:root</code> 伪类选择器中按如下定义:</p>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">:root &#123;\n    &#x2F;* 1. 必须以 -- 开头 *&#x2F;\n    &#x2F;* 2. 区分大小写, 即 --main-color 和 --Main-Color 为完全不同的 CSS 变量 *&#x2F;\n    --main-color: blue;\n&#125;</code></pre>\n\n<p>全局定义的 <code>CSS</code> 变量可以在文档中随处使用, 即有着全局作用域:</p>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">p &#123;\n    color: var(--main-color);\n&#125;</code></pre>\n\n<p><code>CSS</code> 变量也可以局部定义, 即在特定的选择器中按如下定义:</p>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">p &#123;\n    --main-color: blue;\n&#125;</code></pre>\n\n<h1 id=\"优先级和继承\"><a href=\"#优先级和继承\" class=\"headerlink\" title=\"优先级和继承\"></a><code>优先级和继承</code></h1><ol>\n<li>局部作用域变量优先于全局作用域变量。</li>\n</ol>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">:root &#123;\n    --color: blue;\n&#125;\np &#123;\n    --color: red;\n    color: var(--color);\n&#125;</code></pre>\n\n<p>这里 <code>p</code> 标签的颜色将是 <code>red</code>, 因为局部作用域内的 <code>--color: red;</code> 优先级高于全局作用域内的 <code>--color: blue;</code>。</p>\n<ol start=\"2\">\n<li>如果在 <code>CSS</code> 变量被使用的当前作用域内未找到变量定义, 则会沿着当前选中元素的父级元素向上查找, 直到在某个父级元素作用域内找到了该 <code>CSS</code> 变量, 或者在全局作用域内找到了该 <code>CSS</code> 变量。</li>\n</ol>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">:root &#123;\n    --color: blue;\n&#125;\ndiv p &#123;\n    --color: red;\n&#125;\np &#123;\n    color: var(--color);\n&#125;</code></pre>\n\n<p>上述 <code>CSS</code> 代码中, 假定 <code>div p</code> 和 <code>p</code> 选中的是同一元素, 则 <code>p</code> 标签最终颜色为 <code>red</code>。</p>\n<h1 id=\"CSS-变量可嵌套使用\"><a href=\"#CSS-变量可嵌套使用\" class=\"headerlink\" title=\"CSS 变量可嵌套使用\"></a><code>CSS</code> 变量可嵌套使用</h1><pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">p &#123;\n    &#x2F;* 如果 --color 未定义, 则使用 red 作为回退颜色 *&#x2F;\n    color: var(--color, red);\n    &#x2F;* 依次求值, 直到一个 CSS 有效值 *&#x2F;\n    width: var(--width, var(--another-width, 100px));\n&#125;</code></pre>\n\n<h1 id=\"JavaScript-操作-CSS-变量\"><a href=\"#JavaScript-操作-CSS-变量\" class=\"headerlink\" title=\"JavaScript 操作 CSS 变量\"></a><code>JavaScript</code> 操作 <code>CSS</code> 变量</h1><p>有如下 <code>CSS</code>:</p>\n<pre class=\"line-numbers language-CSS\" data-language=\"CSS\"><code class=\"language-CSS\">p &#123;\n    --color: red;\n&#125;</code></pre>\n\n<h2 id=\"获取-DOM-上的-CSS-变量\"><a href=\"#获取-DOM-上的-CSS-变量\" class=\"headerlink\" title=\"获取 DOM 上的 CSS 变量\"></a>获取 <code>DOM</code> 上的 <code>CSS</code> 变量</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">let pDOM &#x3D; document.querySelector(&#39;p&#39;);\npDOM.style.getPropertyValue(&#39;--color&#39;); &#x2F;&#x2F; &#39;red&#39;\ngetComputedStyle(pDOM).getPropertyValue(&#39;--color&#39;); &#x2F;&#x2F; &#39;red&#39;</code></pre>\n\n<h2 id=\"设置-DOM-上的-CSS-变量\"><a href=\"#设置-DOM-上的-CSS-变量\" class=\"headerlink\" title=\"设置 DOM 上的 CSS 变量\"></a>设置 <code>DOM</code> 上的 <code>CSS</code> 变量</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">let pDOM &#x3D; document.querySelector(&#39;p&#39;);\npDOM.style.setProperty(&#39;--color&#39;, &#39;blue&#39;);\npDOM.style.getPropertyValue(&#39;--color&#39;); &#x2F;&#x2F; &#39;blue&#39;\n\n&#x2F;&#x2F; 修改 :root 下的 CSS 变量\ndocument.documentElement.style.setProperty(&#39;--color&#39;, &quot;blue&quot;);</code></pre>\n\n<p>你可以点击下面的链接查看在线 <code>demo</code>:</p>\n<p><a href=\"https://codepen.io/paraoiawhy/pen/YzadXvz\">Demo - Codepen</a></p>\n<p>Read Also:</p>\n<ul>\n<li><a href=\"https://css-tricks.com/updating-a-css-variable-with-javascript/\">Updating a CSS Variable with JavaScript</a></li>\n<li><a href=\"https://stackoverflow.com/questions/41370741/how-do-i-edit-a-css-variable-using-js\"></a></li>\n<li><a href=\"https://www.zhangxinxu.com/study/201811/js-set-css-var.php\">JS设置CSS变量实例页面 - 张鑫旭</a></li>\n</ul>\n","text":"定义和使用 CSS 变量CSS 变量可以全局定义, 即在 :root 伪类选择器中按如下定义: :root &#123; &#x2F;* 1. 必须以 -- 开头 *&#x2F; &#x2F;* 2. 区分大小写, 即 --main-color 和 --Main-Color 为完...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":6,"path":"api/tags/CSS.json"},{"name":"Variable","slug":"Variable","count":1,"path":"api/tags/Variable.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BD%BF%E7%94%A8-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">定义和使用 CSS 变量</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E7%BB%A7%E6%89%BF\"><span class=\"toc-text\">优先级和继承</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CSS-%E5%8F%98%E9%87%8F%E5%8F%AF%E5%B5%8C%E5%A5%97%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">CSS 变量可嵌套使用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JavaScript-%E6%93%8D%E4%BD%9C-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">JavaScript 操作 CSS 变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96-DOM-%E4%B8%8A%E7%9A%84-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">获取 DOM 上的 CSS 变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE-DOM-%E4%B8%8A%E7%9A%84-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">设置 DOM 上的 CSS 变量</span></a></li></ol></li></ol>","author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Web-Components-Part-1","uid":"38487480f04b1d9bb0fc82b79f84cdb0","slug":"Web-Components-Part-1","date":"2022-08-19T08:41:52.000Z","updated":"2022-08-21T09:50:43.565Z","comments":true,"path":"api/articles/Web-Components-Part-1.json","keywords":null,"cover":null,"text":" 生命周期函数Creating Web Components — Lifecycle Callbacks - Medium connectedCallback()当 web components 首次被挂载到 DOM 上, connectedCallback() 回调函数将被执行...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"Web Components","slug":"Web-Components","count":2,"path":"api/tags/Web-Components.json"},{"name":"Part 1","slug":"Part-1","count":1,"path":"api/tags/Part-1.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"git-rename-folder","uid":"a00fa72e4415ac37ab7540acfa537ad4","slug":"git-rename-folder","date":"2022-07-06T06:05:47.000Z","updated":"2022-07-06T06:57:00.047Z","comments":true,"path":"api/articles/git-rename-folder.json","keywords":null,"cover":null,"text":" How to rename a folder using git mv# rename old folder to olds folder git mv old olds # rename olds folder to new folder git mv olds new # ...","link":"","photos":[],"count_time":{"symbolsCount":848,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"},{"name":"folder","slug":"folder","count":1,"path":"api/tags/folder.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}