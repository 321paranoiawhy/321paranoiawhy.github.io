{"title":"LeetCode-189-Rotate-Array","uid":"4c4e445c20b65f0e09bc23668437b5aa","slug":"LeetCode-189-Rotate-Array","date":"2022-05-28T01:17:25.000Z","updated":"2022-05-28T01:17:25.980Z","comments":true,"path":"api/articles/LeetCode-189-Rotate-Array.json","keywords":null,"cover":null,"content":"","text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"浅析JavaScript闭包","uid":"2de01c74f4b6265a85412f75c44f98bc","slug":"浅析JavaScript闭包","date":"2022-06-16T12:05:15.000Z","updated":"2022-06-17T05:34:09.626Z","comments":true,"path":"api/articles/浅析JavaScript闭包.json","keywords":null,"cover":null,"text":"什么是闭包 wikipedia - Closures (Computer Science) MDN - Closures 廖雪峰 - 闭包 阮一峰 - 闭包 函数对象与词法作用域(lexical scoping, 一个包含函数所有变量的对象)绑定在一起解析函数变量的机制, 称为闭...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"闭包","slug":"闭包","count":1,"path":"api/tags/闭包.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"LeetCode-415-Add-Strings","uid":"0828338e1d7b183bc1119e8371d142b5","slug":"LeetCode-415-Add-Strings","date":"2022-05-12T10:03:00.000Z","updated":"2022-05-12T11:02:00.530Z","comments":true,"path":"api/articles/LeetCode-415-Add-Strings.json","keywords":null,"cover":null,"text":" 题目描述给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。 你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。 示例 1: 输入：num1 &#x3D; “11”, num2...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":5,"path":"api/tags/LeetCode.json"},{"name":"415","slug":"415","count":1,"path":"api/tags/415.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}