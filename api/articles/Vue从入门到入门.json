{"title":"Vue从入门到入门","uid":"b136cd29120382e6f6f7ef13bfbcdd84","slug":"Vue从入门到入门","date":"2022-04-18T16:34:20.000Z","updated":"2022-06-16T13:29:57.923Z","comments":true,"path":"api/articles/Vue从入门到入门.json","keywords":null,"cover":null,"content":"<h1 id=\"Vue-组织架构\"><a href=\"#Vue-组织架构\" class=\"headerlink\" title=\"Vue 组织架构\"></a><code>Vue</code> 组织架构</h1><h1 id=\"Vue-组件三大要素\"><a href=\"#Vue-组件三大要素\" class=\"headerlink\" title=\"Vue 组件三大要素\"></a><code>Vue</code> 组件三大要素</h1><p><code>Vue</code> 组件三大要素为: <code>template</code>, <code>script</code> 和 <code>style</code>, 分别对于前端三大件: <code>HTML</code>, <code>CSS</code>, <code>JavaScript</code>。</p>\n<h2 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a><code>template</code></h2><p><code>template</code> 是<code>&quot;智能化&quot;</code>的 <code>HTML</code> 模板。</p>\n<h2 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a><code>script</code></h2><p><code>script</code> 是 <code>JavaScript</code> 脚本代码。</p>\n<h2 id=\"style\"><a href=\"#style\" class=\"headerlink\" title=\"style\"></a><code>style</code></h2><p><code>style</code> 是 <code>CSS</code> 样式代码。</p>\n<h1 id=\"组件调用\"><a href=\"#组件调用\" class=\"headerlink\" title=\"组件调用\"></a>组件调用</h1><p>组件调用可分为父组件调用子组件和子组件调用父组件。</p>\n<h2 id=\"父组件调用子组件\"><a href=\"#父组件调用子组件\" class=\"headerlink\" title=\"父组件调用子组件\"></a>父组件调用子组件</h2><p>假定子组件为 <code>components</code> 文件夹下的 <code>Child.vue</code>, 父组件为 <code>views</code> 文件夹下的 <code>Parent.vue</code>:</p>\n<ol>\n<li>子组件内<strong>导出</strong>: 在子组件 <code>script</code> 中的 <code>export default</code> 语句内添加 <code>name: &quot;Child&quot;</code>;</li>\n<li>子组件<strong>导入</strong>至父组件: 父组件 <code>script</code> 中添加: <code>import Child from &quot;@/components/Child.vue&quot;</code>;</li>\n<li>父组件中<strong>声明</strong>子组件: 父组件 <code>script</code> 中 <code>export default</code> 语句内添加 <code>components: &quot;Child&quot;</code>;</li>\n<li>父组件中<strong>调用</strong>子组件: 父组件 <code>template</code> 中添加: <code>&lt;child&gt;&lt;/child&gt;</code>。</li>\n</ol>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&#x2F;&#x2F; src&#x2F;components&#x2F;Child.vue\n&#x2F;&#x2F; 1. 子组件内导出\nexport default ( &#123;\n  name: &quot;Child&quot;,\n&#125; )</code></pre>\n\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&#x2F;&#x2F; src&#x2F;views&#x2F;Parent.vue\n&#x2F;&#x2F; 2. 子组件导入至父组件\nimport Child from &quot;@&#x2F;components&#x2F;Child.vue&quot;</code></pre>\n\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&#x2F;&#x2F; src&#x2F;views&#x2F;Parent.vue\n&#x2F;&#x2F; 3. 父组件中声明子组件\nexport default ( &#123;\n  components: &#123;Child,\n  &#125;\n&#125; )</code></pre>\n\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">&#x2F;&#x2F; src&#x2F;views&#x2F;Parent.vue\n&#x2F;&#x2F; 4. 父组件中调用子组件\n&lt;child&gt;&lt;&#x2F;child&gt;\n&#x2F;&#x2F; 或 &lt;child &#x2F;&gt;</code></pre>\n\n<h2 id=\"子组件调用父组件\"><a href=\"#子组件调用父组件\" class=\"headerlink\" title=\"子组件调用父组件\"></a>子组件调用父组件</h2><h2 id=\"父组件给子组件传值\"><a href=\"#父组件给子组件传值\" class=\"headerlink\" title=\"父组件给子组件传值\"></a>父组件给子组件传值</h2><h2 id=\"子组件给父组件传值\"><a href=\"#子组件给父组件传值\" class=\"headerlink\" title=\"子组件给父组件传值\"></a>子组件给父组件传值</h2><h1 id=\"文件路径\"><a href=\"#文件路径\" class=\"headerlink\" title=\"文件路径\"></a>文件路径</h1><h2 id=\"绝对路径\"><a href=\"#绝对路径\" class=\"headerlink\" title=\"绝对路径\"></a>绝对路径</h2><h2 id=\"相对路径\"><a href=\"#相对路径\" class=\"headerlink\" title=\"相对路径\"></a>相对路径</h2><h2 id=\"常用语法\"><a href=\"#常用语法\" class=\"headerlink\" title=\"常用语法\"></a>常用语法</h2><pre class=\"line-numbers language-Bash\" data-language=\"Bash\"><code class=\"language-Bash\"># .&#x2F; 当前文件同级目录\n.&#x2F;\n\n# ..&#x2F; 当前文件上一级目录\n..&#x2F;\n\n# ..&#x2F;..&#x2F; 当前文件上两级目录\n..&#x2F;..&#x2F;\n\n# @&#x2F; (@ 代替 &#x2F;src)\n@&#x2F;</code></pre>\n\n","text":"Vue 组织架构Vue 组件三大要素Vue 组件三大要素为: template, script 和 style, 分别对于前端三大件: HTML, CSS, JavaScript。 templatetemplate 是&quot;智能化&quot;的 HTML 模板。 scrip...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"入门","slug":"入门","count":2,"path":"api/tags/入门.json"},{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Vue-%E7%BB%84%E7%BB%87%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">Vue 组织架构</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Vue-%E7%BB%84%E4%BB%B6%E4%B8%89%E5%A4%A7%E8%A6%81%E7%B4%A0\"><span class=\"toc-text\">Vue 组件三大要素</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#template\"><span class=\"toc-text\">template</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#script\"><span class=\"toc-text\">script</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#style\"><span class=\"toc-text\">style</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">组件调用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%B6%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E5%AD%90%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">父组件调用子组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%90%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E7%88%B6%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">子组件调用父组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%B6%E7%BB%84%E4%BB%B6%E7%BB%99%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC\"><span class=\"toc-text\">父组件给子组件传值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%90%E7%BB%84%E4%BB%B6%E7%BB%99%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC\"><span class=\"toc-text\">子组件给父组件传值</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">文件路径</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">绝对路径</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">相对路径</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">常用语法</span></a></li></ol></li></ol>","author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MySQL入门","uid":"5820a12a0486c28e70cc00c5f4972f6a","slug":"MySQL入门","date":"2022-04-19T13:54:40.000Z","updated":"2022-04-19T15:04:04.796Z","comments":true,"path":"api/articles/MySQL入门.json","keywords":null,"cover":null,"text":"MySQL入门资料 廖雪峰 MySQL 教程 数据库类型数据库按照数据结构来组织、存储和管理数据, 数据库一共有三种模型: 层次模型 网状模型 关系模型 关系数据库的关系模型基于数学理论建立, 由于其理解和使用上更简单方便, 因而获得了最广泛的应用。 关系数据库中的关系是通过主键...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"入门","slug":"入门","count":2,"path":"api/tags/入门.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"使用Netlify实现自动化部署","uid":"efd5df9c3582a7fc2970cc06078f99a0","slug":"使用Netlify实现自动化部署","date":"2022-04-17T09:59:25.000Z","updated":"2022-04-17T10:57:14.443Z","comments":true,"path":"api/articles/使用Netlify实现自动化部署.json","keywords":null,"cover":[],"text":" 准备工作 在 GitHub 上创建一个仓库 将本地代码上传至该仓库# 在本地目录右键点击 Git Bash Here # 初始化本地仓库, 使其变成一个本地的 Git 仓库 git init # 本地目录下新增一个 .git 文件夹 # 将本地目录所有文件添加到本地仓库 git...","link":"","photos":[],"count_time":{"symbolsCount":915,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Netlify","slug":"Netlify","count":1,"path":"api/tags/Netlify.json"},{"name":"自动化部署","slug":"自动化部署","count":1,"path":"api/tags/自动化部署.json"},{"name":"GitHub","slug":"GitHub","count":1,"path":"api/tags/GitHub.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}