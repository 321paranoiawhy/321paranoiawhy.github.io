{"title":"由LeetCode第一题两数之和说起","uid":"120b4f6647606fb186b9a22d3e519b62","slug":"由LeetCode第一题两数之和说起","date":"2022-03-28T17:36:49.000Z","updated":"2022-03-28T19:10:17.681Z","comments":true,"path":"api/articles/由LeetCode第一题两数之和说起.json","keywords":null,"cover":null,"content":"<h1 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h1><p>基本描述: 给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，找出 数组 <code>nums</code> 中和为目标值 <code>target</code> 的那两个整数，并返回这个两个整数对应的数组下标。假定每种输入只会对应一个输出 (要么无解, 要么仅有一解), 且数组 <code>nums</code> 中元素具有唯一性。</p>\n<h2 id=\"基本解法一\"><a href=\"#基本解法一\" class=\"headerlink\" title=\"基本解法一\"></a>基本解法一</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">function twoNumberSum(array, targetSum) &#123;\n    let tempArray &#x3D; array.map(item &#x3D;&gt; (targetSum - item));\n    let result &#x3D; [];\n    for (i &#x3D; 0; i &lt; array.length; i++) &#123;\n        if (array.indexOf(tempArray[i]) !&#x3D; -1 &amp;&amp; array.indexOf(tempArray[i]) !&#x3D; i) &#123;\n            result.push(array.indexOf(tempArray[i]));\n        &#125;\n    &#125;\n    if (result.length &#x3D;&#x3D;&#x3D; 0) &#123;return &#96;数组 $&#123;JSON.stringify(array)&#125; 中找不到两数之和为 $&#123;targetSum&#125;&#96;;&#125;\n    else &#123;return result[0] &gt; result[1] ? [result[1], result[0]] : result;&#125;\n&#125;\nconsole.log(twoNumberSum([3, 5, -4, 8, 11, 1, -1, 6], 10)); &#x2F;&#x2F; [4, 6] (因 11 + -1 &#x3D; 10)\nconsole.log(twoNumberSum([3, 5, -4, 8, 11, 1, -1, 6], 100));\n&#x2F;&#x2F; 数组 [3, 5, -4, 8, 11, 1, -1, 6] 中找不到两数之和为 100</code></pre>\n\n<p>注意:</p>\n<ol>\n<li>上述代码中须保证 <code>array.indexOf(tempArray[i]) != i</code>, 以防止 数组 <code>array</code> 中存在 <code>targetSum</code> 的一半, 如 [1, 3, 5, 7] 和 10, 其中 5 是 10的一半;</li>\n<li>当数组中找不到两数之和时, 若直接使用 <code>$&#123;array&#125;</code>, 则会调用数组的 <code>toString()</code> 方法将数组强制转型为字符串, 因而须改用 <code>$&#123;JSON.stringify(array)&#125;</code> 来输出数组;</li>\n<li><code>return result[0] &gt; result[1] ? [result[1], result[0]] : result;</code> 是为了使结果以升序排列。</li>\n</ol>\n<p>将上述代码中的 <code>array</code> 和 <code>targetSum</code> 改为 <code>nums</code> 和 <code>target</code>:</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">function twoNumberSum(nums, target) &#123;\n    let tempArray &#x3D; nums.map(item &#x3D;&gt; (target - item));\n    let result &#x3D; [];\n    for (i &#x3D; 0; i &lt; nums.length; i++) &#123;\n        if (nums.indexOf(tempArray[i]) !&#x3D; -1 &amp;&amp; nums.indexOf(tempArray[i]) !&#x3D; i) &#123;\n            result.push(nums.indexOf(tempArray[i]));\n        &#125;\n        else &#123;return &#96;数组 $&#123;JSON.stringify(nums)&#125; 中找不到两数之和为 $&#123;target&#125;&#96;;&#125;\n    &#125;\n    return result[0] &gt; result[1] ? [result[1], result[0]] : result;\n&#125;</code></pre>","feature":true,"text":"题目描述基本描述: 给定一个整数数组 nums 和一个整数目标值 target，找出 数组 nums 中和为目标值 target 的那两个整数，并返回这个两个整数对应的数组下标。假定每种输入只会对应一个输出 (要么无解, 要么仅有一解), 且数组 nums 中元素具有唯一性。 基...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E8%A7%A3%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">基本解法一</span></a></li></ol></li></ol>","author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"排序算法之JavaScript实现","uid":"0bbd469acde6df175f056490e56783a8","slug":"排序算法之JavaScript实现","date":"2022-03-30T08:29:25.000Z","updated":"2022-03-30T08:29:25.651Z","comments":true,"path":"api/articles/排序算法之JavaScript实现.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"树","uid":"01cf899dac80c5a14d5d881768abc55f","slug":"树","date":"2022-03-28T16:54:52.000Z","updated":"2022-03-28T16:54:52.113Z","comments":true,"path":"api/articles/树.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}