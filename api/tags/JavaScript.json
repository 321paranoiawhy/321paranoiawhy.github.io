{"name":"JavaScript","slug":"JavaScript","count":11,"postlist":[{"title":"JavaScript隐式类型转换","uid":"654476d034e547d801722bf0f52fe54c","slug":"JavaScript隐式类型转换","date":"2022-03-25T14:02:59.000Z","updated":"2022-04-07T14:38:33.060Z","comments":true,"path":"api/articles/JavaScript隐式类型转换.json","keywords":null,"cover":[],"text":"JavaScript 何时会发生隐式类型转换JavaScript 是弱类型语言, 当其期望得到某种数据类型而不得时, 会强制发生隐式类型转换。 自加操作符 (++) 和自减操作符 (--)自加操作符和自减操作符均有前缀 (prefix) 和后缀 (postfix) 之分: ++i...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"隐式类型转换","slug":"隐式类型转换","count":1,"path":"api/tags/隐式类型转换.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript类型校验函数封装","uid":"327a088abef05846131669526f1edcfc","slug":"JavaScript类型校验函数封装","date":"2022-04-06T18:09:03.000Z","updated":"2022-04-07T10:53:34.953Z","comments":true,"path":"api/articles/JavaScript类型校验函数封装.json","keywords":null,"cover":null,"text":"类型校验函数的封装&#x2F;&#x2F; JavaScript 类型校验 checkType 函数, 返回值为字符串类型 function typeCheck(value) &#123; &#x2F;&#x2F; 1. null &#x2F;&#x2F; typeof() 方法...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"类型校验","slug":"类型校验","count":1,"path":"api/tags/类型校验.json"},{"name":"封装函数","slug":"封装函数","count":1,"path":"api/tags/封装函数.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript数组之奇技淫巧","uid":"91d29442500deeb82a763ac9ac0b6005","slug":"JavaScript数组之奇技淫巧","date":"2022-04-11T11:22:17.000Z","updated":"2022-04-25T02:40:23.799Z","comments":true,"path":"api/articles/JavaScript数组之奇技淫巧.json","keywords":null,"cover":null,"text":" 快速创建有规律数组 元素为 0 ~ 99 的数组&#x2F;&#x2F; new Array(100) 创建一个长度为 100 的空数组 (new 关键字可省略) &#x2F;&#x2F; keys() 返回数组索引的一个迭代器 &#x2F;&#x2F; Array.from(...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"数组","slug":"数组","count":2,"path":"api/tags/数组.json"},{"name":"奇技淫巧","slug":"奇技淫巧","count":1,"path":"api/tags/奇技淫巧.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript数据类型及类型判断","uid":"7db2446ec2832237dd5967bf88c6a08e","slug":"JavaScript数据类型及类型判断","date":"2022-03-25T14:04:13.000Z","updated":"2022-04-07T14:51:02.620Z","comments":true,"path":"api/articles/JavaScript数据类型及类型判断.json","keywords":null,"cover":null,"text":"JavaScript类型基本类型JavaScript基本类型有 7 种: Undefined、Null、Boolean、Number、String、Symbol 和 BigInt, 其中Symbol为 ECMAScript 6 新增类型。 引用类型JavaScript引用类型仅 ...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"基本类型","slug":"基本类型","count":1,"path":"api/tags/基本类型.json"},{"name":"引用类型","slug":"引用类型","count":1,"path":"api/tags/引用类型.json"},{"name":"类型判断","slug":"类型判断","count":1,"path":"api/tags/类型判断.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数独游戏设计与实现","uid":"145ad428fef705684e91c950833ed83f","slug":"数独游戏设计与实现","date":"2022-04-10T07:54:35.000Z","updated":"2022-04-11T17:37:03.712Z","comments":true,"path":"api/articles/数独游戏设计与实现.json","keywords":null,"cover":[],"text":" 数独简介数独起源数独分类 河图洛书 射雕英雄传 那女子沮丧失色, 身子摇了几摇, 突然一交跌在细沙之中, 双手捧头, 苦苦思索, 过了一会, 忽然抬起头来, 脸有喜色, 道：“你的算法自然精我百倍, 可是我问你：将一至九这九个数字排成三列, 不论纵横斜角, 每三字相加都是十五,...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"数独","slug":"数独","count":1,"path":"api/tags/数独.json"},{"name":"suduku","slug":"suduku","count":1,"path":"api/tags/suduku.json"},{"name":"设计与实现","slug":"设计与实现","count":1,"path":"api/tags/设计与实现.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"浅析JavaScript伪随机数","uid":"7a05243233c4da00dcd738ef38ccbf4e","slug":"浅析JavaScript伪随机数","date":"2022-04-24T12:30:47.000Z","updated":"2022-04-24T14:14:21.200Z","comments":true,"path":"api/articles/浅析JavaScript伪随机数.json","keywords":null,"cover":null,"text":"Math.random()ECMAScript 21.3.2.27 Math.random (): 提示 Returns a Number value with positive sign, greater than or equal to +0 but strictly les...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"浅析","slug":"浅析","count":1,"path":"api/tags/浅析.json"},{"name":"伪随机数","slug":"伪随机数","count":1,"path":"api/tags/伪随机数.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript代码运行时间","uid":"efcb9823b8515508e8265d986121fffd","slug":"JavaScript代码运行时间","date":"2022-05-08T11:10:35.000Z","updated":"2022-05-10T12:53:45.783Z","comments":true,"path":"api/articles/JavaScript代码运行时间.json","keywords":null,"cover":null,"text":" 1. new Date().getTime()Date.prototype.getTime() let start &#x3D; new Date().getTime(); let end &#x3D; new Date().getTime(); console.log(&#9...","link":"","photos":[],"count_time":{"symbolsCount":500,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"代码运行时间","slug":"代码运行时间","count":1,"path":"api/tags/代码运行时间.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript数组连续n项的最大和","uid":"0be77bbaa4c80d723f54cec9a9ed8e0e","slug":"JavaScript数组连续n项的最大和","date":"2022-05-10T12:24:19.000Z","updated":"2022-05-10T12:30:48.116Z","comments":true,"path":"api/articles/JavaScript数组连续n项的最大和.json","keywords":null,"cover":null,"text":" &#x2F;&#x2F; 求数组连续 n 项的最大和 function nNumbersMaxSum(array, n) &#123; &#x2F;&#x2F; 假值处理 &#x2F;&#x2F; 第一种方式, 虽然去除了假值, 但其位置也被删除了, 新数组长度有所变化 let...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"数组","slug":"数组","count":2,"path":"api/tags/数组.json"},{"name":"连续n项的最大和","slug":"连续n项的最大和","count":1,"path":"api/tags/连续n项的最大和.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LeetCode-53-Maximum-Subarray","uid":"8a91a6c7f25eaf2685bd06ff2df6a231","slug":"LeetCode-53-Maximum-Subarray","date":"2022-05-10T12:25:45.000Z","updated":"2022-05-10T12:31:47.840Z","comments":true,"path":"api/articles/LeetCode-53-Maximum-Subarray.json","keywords":null,"cover":null,"text":" &#x2F;&#x2F; LeetCode-53 https:&#x2F;&#x2F;leetcode.cn&#x2F;problems&#x2F;maximum-subarray&#x2F; &#x2F;&#x2F; 剑指Offer-42 https:&#x2F;&#x2F;...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"LeetCode","slug":"LeetCode","count":5,"path":"api/tags/LeetCode.json"},{"name":"53","slug":"53","count":1,"path":"api/tags/53.json"},{"name":"最大子数组","slug":"最大子数组","count":1,"path":"api/tags/最大子数组.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"浅析JavaScript-console","uid":"e692960d6cb37ee98630bd23879210dd","slug":"浅析JavaScript-console","date":"2022-06-17T10:58:49.000Z","updated":"2022-06-17T12:56:22.880Z","comments":true,"path":"api/articles/浅析JavaScript-console.json","keywords":null,"cover":null,"text":"consoleconsole 是 一个 JavaScript 对象, 可以用来输出信息到控制台。不同的浏览器会各自实现 console。 typeof console; &#x2F;&#x2F; &quot;object&quot; 提示 WHATWG Chrome - Devt...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"console","slug":"console","count":1,"path":"api/tags/console.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"浅析JavaScript闭包","uid":"2de01c74f4b6265a85412f75c44f98bc","slug":"浅析JavaScript闭包","date":"2022-06-16T12:05:15.000Z","updated":"2022-06-17T05:34:09.626Z","comments":true,"path":"api/articles/浅析JavaScript闭包.json","keywords":null,"cover":null,"text":"什么是闭包 wikipedia - Closures (Computer Science) MDN - Closures 廖雪峰 - 闭包 阮一峰 - 闭包 函数对象与词法作用域(lexical scoping, 一个包含函数所有变量的对象)绑定在一起解析函数变量的机制, 称为闭...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":11,"path":"api/tags/JavaScript.json"},{"name":"闭包","slug":"闭包","count":1,"path":"api/tags/闭包.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}