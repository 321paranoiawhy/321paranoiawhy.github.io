{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"Import-JSON-File","uid":"714f34ed9fabefc2c1be746108edd799","slug":"Import-JSON-File","date":"2022-08-21T06:56:41.000Z","updated":"2022-08-21T08:25:17.782Z","comments":true,"path":"api/articles/Import-JSON-File.json","keywords":null,"cover":null,"text":" import assertionsstatic importSee Here 从本地引入 test.json: import test from &#39;.&#x2F;test.json&#39; assert &#123;type: &#39;json&#39;&#125;...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JSON","slug":"JSON","count":1,"path":"api/tags/JSON.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Web-Components-Part-2","uid":"19c59505211190a413a77f90e46a1c80","slug":"Web-Components-Part-2","date":"2022-08-21T04:32:39.000Z","updated":"2022-08-22T01:44:16.313Z","comments":true,"path":"api/articles/Web-Components-Part-2.json","keywords":null,"cover":null,"text":" shadow DOM 内设置内部元素样式Reference: How to create a style tag using JavaScript? - GeeksforGeeks Web Components中引入外部CSS的3种方法 - 张鑫旭 Shadow DOM sty...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"Web Components","slug":"Web-Components","count":2,"path":"api/tags/Web-Components.json"},{"name":"Part 2","slug":"Part-2","count":1,"path":"api/tags/Part-2.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Using-SVG-in-CSS-background-image","uid":"cd6e98e4ee4767f67b55e7c0d57b6257","slug":"Using-SVG-in-CSS-background-image","date":"2022-08-20T13:14:31.000Z","updated":"2022-08-20T15:07:18.936Z","comments":true,"path":"api/articles/Using-SVG-in-CSS-background-image.json","keywords":null,"cover":null,"text":"background-imagebackground-image 的值可以是 none 或者 一个合法的 &lt;image&gt; 值。 &#x2F;* 1. network image *&#x2F; div &#123; background-image: url(http...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":6,"path":"api/tags/CSS.json"},{"name":"SVG","slug":"SVG","count":1,"path":"api/tags/SVG.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"设计灵感收集","uid":"3898482435b90639c29f215ec9492dde","slug":"设计灵感收集","date":"2022-08-19T08:45:33.000Z","updated":"2022-08-19T08:47:11.489Z","comments":true,"path":"api/articles/设计灵感收集.json","keywords":null,"cover":null,"text":"Medium 双击选中文本后弹出提示: 编辑和分享至推特 ","link":"","photos":[],"count_time":{"symbolsCount":30,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"设计","slug":"设计","count":1,"path":"api/tags/设计.json"},{"name":"灵感","slug":"灵感","count":1,"path":"api/tags/灵感.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Web-Components-Part-1","uid":"38487480f04b1d9bb0fc82b79f84cdb0","slug":"Web-Components-Part-1","date":"2022-08-19T08:41:52.000Z","updated":"2022-08-21T09:50:43.565Z","comments":true,"path":"api/articles/Web-Components-Part-1.json","keywords":null,"cover":null,"text":" 生命周期函数Creating Web Components — Lifecycle Callbacks - Medium connectedCallback()当 web components 首次被挂载到 DOM 上, connectedCallback() 回调函数将被执行...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"Web Components","slug":"Web-Components","count":2,"path":"api/tags/Web-Components.json"},{"name":"Part 1","slug":"Part-1","count":1,"path":"api/tags/Part-1.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CSS-Variable","uid":"8949a0dd9071511c8b500f8362ade395","slug":"CSS-Variable","date":"2022-08-18T08:51:55.000Z","updated":"2022-08-18T13:42:12.696Z","comments":true,"path":"api/articles/CSS-Variable.json","keywords":null,"cover":null,"text":"定义和使用 CSS 变量CSS 变量可以全局定义, 即在 :root 伪类选择器中按如下定义: :root &#123; &#x2F;* 1. 必须以 -- 开头 *&#x2F; &#x2F;* 2. 区分大小写, 即 --main-color 和 --Main-Color 为完...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":6,"path":"api/tags/CSS.json"},{"name":"Variable","slug":"Variable","count":1,"path":"api/tags/Variable.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"git-rename-folder","uid":"a00fa72e4415ac37ab7540acfa537ad4","slug":"git-rename-folder","date":"2022-07-06T06:05:47.000Z","updated":"2022-07-06T06:57:00.047Z","comments":true,"path":"api/articles/git-rename-folder.json","keywords":null,"cover":null,"text":" How to rename a folder using git mv# rename old folder to olds folder git mv old olds # rename olds folder to new folder git mv olds new # ...","link":"","photos":[],"count_time":{"symbolsCount":848,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"},{"name":"folder","slug":"folder","count":1,"path":"api/tags/folder.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Garbage-Collection","uid":"a891c429dc0787946e1245bc88b0db30","slug":"Garbage-Collection","date":"2022-06-29T15:43:35.000Z","updated":"2022-06-29T16:10:45.332Z","comments":true,"path":"api/articles/Garbage-Collection.json","keywords":null,"cover":null,"text":"node 手动触发 gc# 显示 v8 选项 node --v8-options node --expose-gc # 查看全局对象 global 或 globalThis global # globalThis (global &#x3D;&#x3D;&#x3D; global...","link":"","photos":[],"count_time":{"symbolsCount":664,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"garbage collection","slug":"garbage-collection","count":1,"path":"api/tags/garbage-collection.json"},{"name":"gc","slug":"gc","count":1,"path":"api/tags/gc.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"gitignore","uid":"ed0cb0859b9de4f2f258132e509d4041","slug":"gitignore","date":"2022-06-29T15:39:15.000Z","updated":"2022-07-06T06:49:28.082Z","comments":true,"path":"api/articles/gitignore.json","keywords":null,"cover":null,"text":" 创建 .gitignore 文件在文件夹根目录下手动创建 .gitignore 文件即可。 添加忽略文件# 忽略 test.txt 文件 test.txt # 忽略所有 txt 文件 *.txt # 忽略 .gitignore 文件 .gitignore 添加忽略文件夹# 忽略...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"},{"name":"gitignore","slug":"gitignore","count":1,"path":"api/tags/gitignore.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Merge-Array","uid":"ddf81e4d2cdc1ed061ddd74a974ddf58","slug":"Merge-Array","date":"2022-06-29T09:39:24.000Z","updated":"2022-06-29T12:59:40.541Z","comments":true,"path":"api/articles/Merge-Array.json","keywords":null,"cover":null,"text":" 题目描述给定一个数组, 如果多个元素是连续的(差值为1), 则合并为范围表示, 否则, 合并为元素的字符串表示。如 [1, 2, 3, 6, 8, 9, 15] 合并后结果为: [&#39;1-3&#39;,&#39;6&#39;,&#39;8-9&#39;,&#39;15&#...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"array","slug":"array","count":1,"path":"api/tags/array.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"AbstractAndStrictEqualityComparison","uid":"cf1d08af16bde33b9bad9b4c97fca945","slug":"AbstractAndStrictEqualityComparison","date":"2022-06-22T14:39:13.000Z","updated":"2022-06-22T15:46:54.865Z","comments":true,"path":"api/articles/AbstractAndStrictEqualityComparison.json","keywords":null,"cover":null,"text":" x === 1 &amp;&amp; x === 2 &amp;&amp; x === 3let x &#x3D; 1; console.log(x &#x3D;&#x3D;&#x3D; 1 &amp;&amp; x &#x3D;&#x3D;&#x3D; 2 &amp;&amp...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"Abstract Equality Comparison","slug":"Abstract-Equality-Comparison","count":1,"path":"api/tags/Abstract-Equality-Comparison.json"},{"name":"Strict Equality Comparison","slug":"Strict-Equality-Comparison","count":1,"path":"api/tags/Strict-Equality-Comparison.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"mac三个小圆点之CSS实现","uid":"779b5ad4b4932e48cef7c8491a075b37","slug":"mac三个小圆点之CSS实现","date":"2022-06-20T06:26:04.000Z","updated":"2022-06-20T11:34:52.059Z","comments":true,"path":"api/articles/mac三个小圆点之CSS实现.json","keywords":null,"cover":null,"text":" 第一个小圆点可以使用 border-radius 实现一个小圆点: &lt;div class&#x3D;&quot;mac-menu-circle&quot;&gt;&lt;&#x2F;div&gt; div.mac-menu-circle &#123; width: 15p...","link":"","photos":[],"count_time":{"symbolsCount":660,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":6,"path":"api/tags/CSS.json"},{"name":"mac","slug":"mac","count":1,"path":"api/tags/mac.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"浅析JavaScript-console","uid":"e692960d6cb37ee98630bd23879210dd","slug":"浅析JavaScript-console","date":"2022-06-17T10:58:49.000Z","updated":"2022-07-06T07:05:12.386Z","comments":true,"path":"api/articles/浅析JavaScript-console.json","keywords":null,"cover":null,"text":"consoleconsole 是 一个 JavaScript 对象, 可以用来输出信息到控制台。不同的浏览器会各自实现 console。 typeof console; &#x2F;&#x2F; &quot;object&quot; Object.keys(console); &...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"console","slug":"console","count":1,"path":"api/tags/console.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"浅析JavaScript闭包","uid":"2de01c74f4b6265a85412f75c44f98bc","slug":"浅析JavaScript闭包","date":"2022-06-16T12:05:15.000Z","updated":"2022-06-17T05:34:09.626Z","comments":true,"path":"api/articles/浅析JavaScript闭包.json","keywords":null,"cover":null,"text":"什么是闭包 wikipedia - Closures (Computer Science) MDN - Closures 廖雪峰 - 闭包 阮一峰 - 闭包 函数对象与词法作用域(lexical scoping, 一个包含函数所有变量的对象)绑定在一起解析函数变量的机制, 称为闭...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"闭包","slug":"闭包","count":1,"path":"api/tags/闭包.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LeetCode-415-Add-Strings","uid":"0828338e1d7b183bc1119e8371d142b5","slug":"LeetCode-415-Add-Strings","date":"2022-05-12T10:03:00.000Z","updated":"2022-05-12T11:02:00.530Z","comments":true,"path":"api/articles/LeetCode-415-Add-Strings.json","keywords":null,"cover":null,"text":" 题目描述给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。 你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。 示例 1: 输入：num1 &#x3D; “11”, num2...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":5,"path":"api/tags/LeetCode.json"},{"name":"415","slug":"415","count":1,"path":"api/tags/415.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LeetCpde-258-Add-Digits","uid":"27cd344dd8085af202d0af89a2be40ac","slug":"LeetCpde-258-Add-Digits","date":"2022-05-12T09:34:02.000Z","updated":"2022-05-12T10:00:40.060Z","comments":true,"path":"api/articles/LeetCpde-258-Add-Digits.json","keywords":null,"cover":null,"text":" 题目描述给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。返回这个结果。 示例1: 输入: num &#x3D; 38输出: 2解释: 各位相加的过程为：38 –&gt; 3 + 8 –&gt; 1111 –&gt; 1 + 1 –&gt; 2由于 2 是一...","link":"","photos":[],"count_time":{"symbolsCount":988,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":5,"path":"api/tags/LeetCode.json"},{"name":"258","slug":"258","count":1,"path":"api/tags/258.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MDN-TOC之CSS实现","uid":"a37d0a65a94985c4e63c4ca2b1855441","slug":"MDN-TOC之CSS实现","date":"2022-05-11T08:01:43.000Z","updated":"2022-05-11T15:12:42.198Z","comments":true,"path":"api/articles/MDN-TOC之CSS实现.json","keywords":null,"cover":[],"text":" 原效果MDN-JavaScript 完整实现&lt;section&gt; &lt;h2&gt;In this article&lt;&#x2F;h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href&#x3D;&quot;&quot;&gt;学习路线&l...","link":"","photos":[],"count_time":{"symbolsCount":738,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":6,"path":"api/tags/CSS.json"},{"name":"MDN","slug":"MDN","count":1,"path":"api/tags/MDN.json"},{"name":"TOC","slug":"TOC","count":1,"path":"api/tags/TOC.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Google-Firebase分割线之CSS实现","uid":"03ddf2e0921f825cbeec21420e357a37","slug":"Google-Firebase分割线之CSS实现","date":"2022-05-11T06:53:59.000Z","updated":"2022-05-11T08:38:55.004Z","comments":true,"path":"api/articles/Google-Firebase分割线之CSS实现.json","keywords":null,"cover":[],"text":" 原效果Google-Firebase 单一的分割线之 CSS 实现利用 span 标签, 通过设定 display: inline-block; , 并设置其宽度为 1px, 高度为 30px, 即可实现分割线。 &lt;span class&#x3D;&quot;fireba...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":6,"path":"api/tags/CSS.json"},{"name":"Google","slug":"Google","count":1,"path":"api/tags/Google.json"},{"name":"Firebase","slug":"Firebase","count":1,"path":"api/tags/Firebase.json"},{"name":"分割线","slug":"分割线","count":1,"path":"api/tags/分割线.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LeetCode-53-Maximum-Subarray","uid":"8a91a6c7f25eaf2685bd06ff2df6a231","slug":"LeetCode-53-Maximum-Subarray","date":"2022-05-10T12:25:45.000Z","updated":"2022-05-10T12:31:47.840Z","comments":true,"path":"api/articles/LeetCode-53-Maximum-Subarray.json","keywords":null,"cover":null,"text":" &#x2F;&#x2F; LeetCode-53 https:&#x2F;&#x2F;leetcode.cn&#x2F;problems&#x2F;maximum-subarray&#x2F; &#x2F;&#x2F; 剑指Offer-42 https:&#x2F;&#x2F;...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"LeetCode","slug":"LeetCode","count":5,"path":"api/tags/LeetCode.json"},{"name":"53","slug":"53","count":1,"path":"api/tags/53.json"},{"name":"最大子数组","slug":"最大子数组","count":1,"path":"api/tags/最大子数组.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript数组连续n项的最大和","uid":"0be77bbaa4c80d723f54cec9a9ed8e0e","slug":"JavaScript数组连续n项的最大和","date":"2022-05-10T12:24:19.000Z","updated":"2022-05-10T12:30:48.116Z","comments":true,"path":"api/articles/JavaScript数组连续n项的最大和.json","keywords":null,"cover":null,"text":" &#x2F;&#x2F; 求数组连续 n 项的最大和 function nNumbersMaxSum(array, n) &#123; &#x2F;&#x2F; 假值处理 &#x2F;&#x2F; 第一种方式, 虽然去除了假值, 但其位置也被删除了, 新数组长度有所变化 let...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"数组","slug":"数组","count":2,"path":"api/tags/数组.json"},{"name":"连续n项的最大和","slug":"连续n项的最大和","count":1,"path":"api/tags/连续n项的最大和.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript代码运行时间","uid":"efcb9823b8515508e8265d986121fffd","slug":"JavaScript代码运行时间","date":"2022-05-08T11:10:35.000Z","updated":"2022-05-10T12:53:45.783Z","comments":true,"path":"api/articles/JavaScript代码运行时间.json","keywords":null,"cover":null,"text":" 1. new Date().getTime()Date.prototype.getTime() let start &#x3D; new Date().getTime(); let end &#x3D; new Date().getTime(); console.log(&#9...","link":"","photos":[],"count_time":{"symbolsCount":500,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"代码运行时间","slug":"代码运行时间","count":1,"path":"api/tags/代码运行时间.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"浅析JavaScript伪随机数","uid":"7a05243233c4da00dcd738ef38ccbf4e","slug":"浅析JavaScript伪随机数","date":"2022-04-24T12:30:47.000Z","updated":"2022-04-24T14:14:21.200Z","comments":true,"path":"api/articles/浅析JavaScript伪随机数.json","keywords":null,"cover":null,"text":"Math.random()ECMAScript 21.3.2.27 Math.random (): 提示 Returns a Number value with positive sign, greater than or equal to +0 but strictly les...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"浅析","slug":"浅析","count":1,"path":"api/tags/浅析.json"},{"name":"伪随机数","slug":"伪随机数","count":1,"path":"api/tags/伪随机数.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CSS之水平居中和垂直居中","uid":"dd3415ed6272950eb1b537c4a572c566","slug":"CSS之水平居中和垂直居中","date":"2022-04-22T01:53:12.000Z","updated":"2022-04-22T02:00:09.184Z","comments":true,"path":"api/articles/CSS之水平居中和垂直居中.json","keywords":null,"cover":null,"text":"单一元素水平居中子元素相对于父元素居中","link":"","photos":[],"count_time":{"symbolsCount":19,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":6,"path":"api/tags/CSS.json"},{"name":"水平居中","slug":"水平居中","count":1,"path":"api/tags/水平居中.json"},{"name":"垂直居中","slug":"垂直居中","count":1,"path":"api/tags/垂直居中.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL入门","uid":"5820a12a0486c28e70cc00c5f4972f6a","slug":"MySQL入门","date":"2022-04-19T13:54:40.000Z","updated":"2022-04-19T15:04:04.796Z","comments":true,"path":"api/articles/MySQL入门.json","keywords":null,"cover":null,"text":"MySQL入门资料 廖雪峰 MySQL 教程 数据库类型数据库按照数据结构来组织、存储和管理数据, 数据库一共有三种模型: 层次模型 网状模型 关系模型 关系数据库的关系模型基于数学理论建立, 由于其理解和使用上更简单方便, 因而获得了最广泛的应用。 关系数据库中的关系是通过主键...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"入门","slug":"入门","count":2,"path":"api/tags/入门.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vue从入门到入门","uid":"b136cd29120382e6f6f7ef13bfbcdd84","slug":"Vue从入门到入门","date":"2022-04-18T16:34:20.000Z","updated":"2022-06-16T13:29:57.923Z","comments":true,"path":"api/articles/Vue从入门到入门.json","keywords":null,"cover":null,"text":"Vue 组织架构Vue 组件三大要素Vue 组件三大要素为: template, script 和 style, 分别对于前端三大件: HTML, CSS, JavaScript。 templatetemplate 是&quot;智能化&quot;的 HTML 模板。 scrip...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"入门","slug":"入门","count":2,"path":"api/tags/入门.json"},{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"使用Netlify实现自动化部署","uid":"efd5df9c3582a7fc2970cc06078f99a0","slug":"使用Netlify实现自动化部署","date":"2022-04-17T09:59:25.000Z","updated":"2022-04-17T10:57:14.443Z","comments":true,"path":"api/articles/使用Netlify实现自动化部署.json","keywords":null,"cover":[],"text":" 准备工作 在 GitHub 上创建一个仓库 将本地代码上传至该仓库# 在本地目录右键点击 Git Bash Here # 初始化本地仓库, 使其变成一个本地的 Git 仓库 git init # 本地目录下新增一个 .git 文件夹 # 将本地目录所有文件添加到本地仓库 git...","link":"","photos":[],"count_time":{"symbolsCount":915,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Netlify","slug":"Netlify","count":1,"path":"api/tags/Netlify.json"},{"name":"自动化部署","slug":"自动化部署","count":1,"path":"api/tags/自动化部署.json"},{"name":"GitHub","slug":"GitHub","count":1,"path":"api/tags/GitHub.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"深入解析位运算性质","uid":"d59a8ff0fbd74225a125fea75d954925","slug":"深入解析位运算性质","date":"2022-04-12T09:29:31.000Z","updated":"2022-04-17T16:37:42.363Z","comments":true,"path":"api/articles/深入解析位运算性质.json","keywords":null,"cover":[],"text":" 二进制回顾十进制整数转换为二进制十进制整数转换为二进制可采用 除2取余, 逆序排列 (短除法) ： 十进制小数转换为二进制十进制整数转换为二进制可采用 乘2取整, 顺序排列 ： 以 0.625 为例: 因此, 十进制 0.625 的二进制表示为: 0.101 。 为何位运算尽管...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"位运算","slug":"位运算","count":1,"path":"api/tags/位运算.json"},{"name":"深入解析","slug":"深入解析","count":1,"path":"api/tags/深入解析.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"精确覆盖问题","uid":"1001f33dad10400ea5f367d8a08e122a","slug":"精确覆盖问题","date":"2022-04-12T09:10:46.000Z","updated":"2022-04-12T09:12:34.442Z","comments":true,"path":"api/articles/精确覆盖问题.json","keywords":null,"cover":null,"text":" 精确覆盖问题Exact cover wiki Dancing Links OI Wiki A Sudoku Solver in Java implementing Knuth’s Dancing Links Algorithm 数独规则回顾 每个格子只能填入 1 ~ 9 中的一...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LeetCode-剑指Offer-15-二进制中1的个数","uid":"6476889812499529d67e180547b73424","slug":"LeetCode-剑指Offer-15-二进制中1的个数","date":"2022-04-11T13:15:22.000Z","updated":"2022-04-12T13:54:57.734Z","comments":true,"path":"api/articles/LeetCode-剑指Offer-15-二进制中1的个数.json","keywords":null,"cover":null,"text":" 题目描述本题同 LeetCode-191-位1的个数。 编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为 Hamming weight )。 示例1 输入：n &#x3D; 11 (控制台输入 0000000000...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":5,"path":"api/tags/LeetCode.json"},{"name":"剑指Offer","slug":"剑指Offer","count":1,"path":"api/tags/剑指Offer.json"},{"name":"二进制","slug":"二进制","count":1,"path":"api/tags/二进制.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript数组之奇技淫巧","uid":"91d29442500deeb82a763ac9ac0b6005","slug":"JavaScript数组之奇技淫巧","date":"2022-04-11T11:22:17.000Z","updated":"2022-04-25T02:40:23.799Z","comments":true,"path":"api/articles/JavaScript数组之奇技淫巧.json","keywords":null,"cover":null,"text":" 快速创建有规律数组 元素为 0 ~ 99 的数组&#x2F;&#x2F; new Array(100) 创建一个长度为 100 的空数组 (new 关键字可省略) &#x2F;&#x2F; keys() 返回数组索引的一个迭代器 &#x2F;&#x2F; Array.from(...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"数组","slug":"数组","count":2,"path":"api/tags/数组.json"},{"name":"奇技淫巧","slug":"奇技淫巧","count":1,"path":"api/tags/奇技淫巧.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数独游戏设计与实现","uid":"145ad428fef705684e91c950833ed83f","slug":"数独游戏设计与实现","date":"2022-04-10T07:54:35.000Z","updated":"2022-04-11T17:37:03.712Z","comments":true,"path":"api/articles/数独游戏设计与实现.json","keywords":null,"cover":[],"text":" 数独简介数独起源数独分类 河图洛书 射雕英雄传 那女子沮丧失色, 身子摇了几摇, 突然一交跌在细沙之中, 双手捧头, 苦苦思索, 过了一会, 忽然抬起头来, 脸有喜色, 道：“你的算法自然精我百倍, 可是我问你：将一至九这九个数字排成三列, 不论纵横斜角, 每三字相加都是十五,...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"数独","slug":"数独","count":1,"path":"api/tags/数独.json"},{"name":"suduku","slug":"suduku","count":1,"path":"api/tags/suduku.json"},{"name":"设计与实现","slug":"设计与实现","count":1,"path":"api/tags/设计与实现.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"pip安装第三方库报错","uid":"10790f82c593c2090a644c2eb357ae58","slug":"pip安装第三方库报错","date":"2022-04-09T16:51:26.000Z","updated":"2022-04-09T18:14:56.738Z","comments":true,"path":"api/articles/pip安装第三方库报错.json","keywords":null,"cover":null,"text":" 报错示意# 安装第三方库 manim # 注意 package_name 为 manimgl (而非 manim) pip install manimgl WARNING: Retrying (Retry(total&#x3D;4, connect&#x3D;None, rea...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"mainm","slug":"mainm","count":1,"path":"api/tags/mainm.json"},{"name":"pip","slug":"pip","count":1,"path":"api/tags/pip.json"},{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LeetCode-796-Rotate-String","uid":"afa662091cf53ca79a8858de12df085e","slug":"LeetCode-796-Rotate-String","date":"2022-04-07T14:48:10.000Z","updated":"2022-04-07T18:29:10.931Z","comments":true,"path":"api/articles/LeetCode-796-Rotate-String.json","keywords":null,"cover":[],"text":" 题目描述LeetCode-796-Rotate-String Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s....","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":5,"path":"api/tags/LeetCode.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript类型校验函数封装","uid":"327a088abef05846131669526f1edcfc","slug":"JavaScript类型校验函数封装","date":"2022-04-06T18:09:03.000Z","updated":"2022-04-07T10:53:34.953Z","comments":true,"path":"api/articles/JavaScript类型校验函数封装.json","keywords":null,"cover":null,"text":"类型校验函数的封装&#x2F;&#x2F; JavaScript 类型校验 checkType 函数, 返回值为字符串类型 function typeCheck(value) &#123; &#x2F;&#x2F; 1. null &#x2F;&#x2F; typeof() 方法...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"类型校验","slug":"类型校验","count":1,"path":"api/tags/类型校验.json"},{"name":"封装函数","slug":"封装函数","count":1,"path":"api/tags/封装函数.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"由LeetCode第一题两数之和说起","uid":"120b4f6647606fb186b9a22d3e519b62","slug":"由LeetCode第一题两数之和说起","date":"2022-03-28T17:36:49.000Z","updated":"2022-03-28T19:10:17.681Z","comments":true,"path":"api/articles/由LeetCode第一题两数之和说起.json","keywords":null,"cover":null,"text":"题目描述基本描述: 给定一个整数数组 nums 和一个整数目标值 target，找出 数组 nums 中和为目标值 target 的那两个整数，并返回这个两个整数对应的数组下标。假定每种输入只会对应一个输出 (要么无解, 要么仅有一解), 且数组 nums 中元素具有唯一性。 基...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript数据类型及类型判断","uid":"7db2446ec2832237dd5967bf88c6a08e","slug":"JavaScript数据类型及类型判断","date":"2022-03-25T14:04:13.000Z","updated":"2022-04-07T14:51:02.620Z","comments":true,"path":"api/articles/JavaScript数据类型及类型判断.json","keywords":null,"cover":null,"text":"JavaScript类型基本类型JavaScript基本类型有 7 种: Undefined、Null、Boolean、Number、String、Symbol 和 BigInt, 其中Symbol为 ECMAScript 6 新增类型。 引用类型JavaScript引用类型仅 ...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"基本类型","slug":"基本类型","count":1,"path":"api/tags/基本类型.json"},{"name":"引用类型","slug":"引用类型","count":1,"path":"api/tags/引用类型.json"},{"name":"类型判断","slug":"类型判断","count":1,"path":"api/tags/类型判断.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript隐式类型转换","uid":"654476d034e547d801722bf0f52fe54c","slug":"JavaScript隐式类型转换","date":"2022-03-25T14:02:59.000Z","updated":"2022-04-07T14:38:33.060Z","comments":true,"path":"api/articles/JavaScript隐式类型转换.json","keywords":null,"cover":[],"text":"JavaScript 何时会发生隐式类型转换JavaScript 是弱类型语言, 当其期望得到某种数据类型而不得时, 会强制发生隐式类型转换。 自加操作符 (++) 和自减操作符 (--)自加操作符和自减操作符均有前缀 (prefix) 和后缀 (postfix) 之分: ++i...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":12,"path":"api/tags/JavaScript.json"},{"name":"隐式类型转换","slug":"隐式类型转换","count":1,"path":"api/tags/隐式类型转换.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"命令行初探","uid":"99327f04c23749b756244dec62781e9e","slug":"命令行初探","date":"2022-03-24T15:44:35.000Z","updated":"2022-03-24T15:45:28.641Z","comments":true,"path":"api/articles/命令行初探.json","keywords":null,"cover":null,"text":"cd 命令 (change directory)cd 命令主要用于切换当前目录。 cd 语法cd [&#x2F;d] [&lt;drive&gt;:][&lt;path&gt;] cd [..] chdir [&#x2F;d] [&lt;drive&gt;:][&lt;path&...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"命令行","slug":"命令行","count":1,"path":"api/tags/命令行.json"},{"name":"cd","slug":"cd","count":1,"path":"api/tags/cd.json"},{"name":"npm","slug":"npm","count":1,"path":"api/tags/npm.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":0,"tags":0,"word_count":"118k","post_count":38}