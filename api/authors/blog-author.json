{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"精准覆盖问题","uid":"85a18fb8bf9eacfb966d0afec517b121","slug":"精准覆盖问题","date":"2022-04-10T17:17:23.000Z","updated":"2022-04-10T18:58:30.065Z","comments":true,"path":"api/articles/精准覆盖问题.json","keywords":null,"cover":null,"text":"数独规则回顾 每个格子只能填入 1 ~ 9 中的一个数字; 每行 1 ~ 9 中的每个数字只能出现一次; 每列 1 ~ 9 中的每个数字只能出现一次; 每宫 1 ~ 9 中的每个数字只能出现一次。 矩阵列定义 (约束条件)将矩阵的每一列均定义为一个约束条件。 第 1 ~ 81 列...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"精确覆盖问题","slug":"精确覆盖问题","count":1,"path":"api/tags/精确覆盖问题.json"},{"name":"01 矩阵","slug":"01-矩阵","count":1,"path":"api/tags/01-矩阵.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"数独游戏设计与实现","uid":"145ad428fef705684e91c950833ed83f","slug":"数独游戏设计与实现","date":"2022-04-10T07:54:35.000Z","updated":"2022-04-11T08:16:44.385Z","comments":true,"path":"api/articles/数独游戏设计与实现.json","keywords":null,"cover":null,"text":" 数独简介数独起源数独分类 河图洛书![河图洛书1](../images/Lo_Shu_3x3_magic_square.svg) ![河图洛书2](../images/hetu_luoshu.jpeg) 射雕英雄传 那女子沮丧失色, 身子摇了几摇, 突然一交跌在细沙之中, 双手...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"},{"name":"数独","slug":"数独","count":1,"path":"api/tags/数独.json"},{"name":"suduku","slug":"suduku","count":1,"path":"api/tags/suduku.json"},{"name":"设计与实现","slug":"设计与实现","count":1,"path":"api/tags/设计与实现.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"pip安装第三方库报错","uid":"10790f82c593c2090a644c2eb357ae58","slug":"pip安装第三方库报错","date":"2022-04-09T16:51:26.000Z","updated":"2022-04-09T18:14:56.738Z","comments":true,"path":"api/articles/pip安装第三方库报错.json","keywords":null,"cover":null,"text":" 报错示意# 安装第三方库 manim # 注意 package_name 为 manimgl (而非 manim) pip install manimgl WARNING: Retrying (Retry(total&#x3D;4, connect&#x3D;None, rea...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"mainm","slug":"mainm","count":1,"path":"api/tags/mainm.json"},{"name":"pip","slug":"pip","count":1,"path":"api/tags/pip.json"},{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"LeetCode-796-Rotate-String","uid":"afa662091cf53ca79a8858de12df085e","slug":"LeetCode-796-Rotate-String","date":"2022-04-07T14:48:10.000Z","updated":"2022-04-07T18:29:10.931Z","comments":true,"path":"api/articles/LeetCode-796-Rotate-String.json","keywords":null,"cover":[],"text":" 题目描述LeetCode-796-Rotate-String Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s....","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":1,"path":"api/tags/LeetCode.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript类型校验函数封装","uid":"327a088abef05846131669526f1edcfc","slug":"JavaScript类型校验函数封装","date":"2022-04-06T18:09:03.000Z","updated":"2022-04-07T10:53:34.953Z","comments":true,"path":"api/articles/JavaScript类型校验函数封装.json","keywords":null,"cover":null,"text":"类型校验函数的封装&#x2F;&#x2F; JavaScript 类型校验 checkType 函数, 返回值为字符串类型 function typeCheck(value) &#123; &#x2F;&#x2F; 1. null &#x2F;&#x2F; typeof() 方法...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"},{"name":"类型校验","slug":"类型校验","count":1,"path":"api/tags/类型校验.json"},{"name":"封装函数","slug":"封装函数","count":1,"path":"api/tags/封装函数.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"排序算法之JavaScript实现","uid":"0bbd469acde6df175f056490e56783a8","slug":"排序算法之JavaScript实现","date":"2022-03-30T08:29:25.000Z","updated":"2022-03-30T08:29:25.651Z","comments":true,"path":"api/articles/排序算法之JavaScript实现.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"由LeetCode第一题两数之和说起","uid":"120b4f6647606fb186b9a22d3e519b62","slug":"由LeetCode第一题两数之和说起","date":"2022-03-28T17:36:49.000Z","updated":"2022-03-28T19:10:17.681Z","comments":true,"path":"api/articles/由LeetCode第一题两数之和说起.json","keywords":null,"cover":null,"text":"题目描述基本描述: 给定一个整数数组 nums 和一个整数目标值 target，找出 数组 nums 中和为目标值 target 的那两个整数，并返回这个两个整数对应的数组下标。假定每种输入只会对应一个输出 (要么无解, 要么仅有一解), 且数组 nums 中元素具有唯一性。 基...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"树","uid":"01cf899dac80c5a14d5d881768abc55f","slug":"树","date":"2022-03-28T16:54:52.000Z","updated":"2022-03-28T16:54:52.113Z","comments":true,"path":"api/articles/树.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript数据类型及类型判断","uid":"7db2446ec2832237dd5967bf88c6a08e","slug":"JavaScript数据类型及类型判断","date":"2022-03-25T14:04:13.000Z","updated":"2022-04-07T14:51:02.620Z","comments":true,"path":"api/articles/JavaScript数据类型及类型判断.json","keywords":null,"cover":null,"text":"JavaScript类型基本类型JavaScript基本类型有 7 种: Undefined、Null、Boolean、Number、String、Symbol 和 BigInt, 其中Symbol为 ECMAScript 6 新增类型。 引用类型JavaScript引用类型仅 ...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"},{"name":"基本类型","slug":"基本类型","count":1,"path":"api/tags/基本类型.json"},{"name":"引用类型","slug":"引用类型","count":1,"path":"api/tags/引用类型.json"},{"name":"类型判断","slug":"类型判断","count":1,"path":"api/tags/类型判断.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JavaScript隐式类型转换","uid":"654476d034e547d801722bf0f52fe54c","slug":"JavaScript隐式类型转换","date":"2022-03-25T14:02:59.000Z","updated":"2022-04-07T14:38:33.060Z","comments":true,"path":"api/articles/JavaScript隐式类型转换.json","keywords":null,"cover":[],"text":"JavaScript 何时会发生隐式类型转换JavaScript 是弱类型语言, 当其期望得到某种数据类型而不得时, 会强制发生隐式类型转换。 自加操作符 (++) 和自减操作符 (--)自加操作符和自减操作符均有前缀 (prefix) 和后缀 (postfix) 之分: ++i...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"},{"name":"隐式类型转换","slug":"隐式类型转换","count":1,"path":"api/tags/隐式类型转换.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"命令行初探","uid":"99327f04c23749b756244dec62781e9e","slug":"命令行初探","date":"2022-03-24T15:44:35.000Z","updated":"2022-03-24T15:45:28.641Z","comments":true,"path":"api/articles/命令行初探.json","keywords":null,"cover":null,"text":"cd 命令 (change directory)cd 命令主要用于切换当前目录。 cd 语法cd [&#x2F;d] [&lt;drive&gt;:][&lt;path&gt;] cd [..] chdir [&#x2F;d] [&lt;drive&gt;:][&lt;path&...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"命令行","slug":"命令行","count":1,"path":"api/tags/命令行.json"},{"name":"cd","slug":"cd","count":1,"path":"api/tags/cd.json"},{"name":"npm","slug":"npm","count":1,"path":"api/tags/npm.json"}],"author":{"name":"paranoia","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"https://321paranoiawhy.github.io","description":"生命不息, 笔耕不辍","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":0,"tags":0,"word_count":"40k","post_count":11}